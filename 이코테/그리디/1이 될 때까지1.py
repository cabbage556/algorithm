"""
1이 될 때까지
    어떤 수 n이 1이 될 때까지 두 과정 중 하나를 반복적으로 선택하여 수행함
    단, 두 번째 연산은 n이 k로 나누어 떨어질 때만 선택 가능함
    1. n에서 1을 뺌
    2. n을 k로 나눔

    n이 1이 될 때까지 1번 또는 2번 과정의 수행 횟수 중 최소 횟수를 구하기
"""

# n : 2 ~ 100,000
# m : 2 ~ 100,000
n, k = map(int, input().split())

# 수행 횟수
res = 0

# n이 1이 될 때까지 반복
while n != 1:

    # n이 1이 되는 데 2번 과정이 1번 과정보다 빠르므로 나누어 떨어지면 나누기
    if n % k == 0:
        n = n // k
    else:
        n -= 1

    # 1번 과정 또는 2번 과정 진행 후 수행 횟수 1 증가
    res += 1

print(res)
