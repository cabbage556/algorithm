# 집합 자료형
#       집합을 처리하기 위한 자료형
#       기본적으로 리스트 또는 문자열로 만들 수 있음
#       집합 자료형의 특징
#           중복을 허용하지 않음
#           원소의 순서가 존재하지 않음
#       집합 자료형과 사전 자료형 모두 원소의 순서가 없어 인덱싱을 사용할 수 없음
#       집합 자료형에서 특정 원소 존재 여부를 확인하는 연산의 시간 복잡도: O(1)
#       특정 데이터가 이미 등장한 적이 있는지 여부를 확인할 때 효과적임

# 집합 자료형 초기화
data = set([1, 1, 2, 3, 4, 4, 5])
print(data)  # {1, 2, 3, 4, 5}

data = {1, 1, 2, 3, 4, 4, 5}
print(data)  # {1, 2, 3, 4, 5}


# 집합 자료형의 연산
a = {1, 2, 3, 4, 5}
b = {3, 4, 5, 6, 7}
print(a | b)  # 합집합: {1, 2, 3, 4, 5, 6, 7}
print(a & b)  # 교집합: {3, 4, 5}
print(a - b)  # 차집합: {1, 2}


# 집합 자료형 관련 함수
#       add(): 새로운 원소 하나 추가, O(1)
#       update(): 새로운 원소 여러 개 추가, O(1)
#       remove(): 특정 값을 갖는 원소 제거, O(1)
data = {1, 2, 3}
data.add(4)
print(data)  # {1, 2, 3, 4}

data.update([5, 6])
print(data)  # {1, 2, 3, 4, 5, 6}

data.remove(3)
print(data)  # {1, 2, 4, 5, 6}
