n = int(input())

dp = [0] * 1001  # DP 테이블 초기화: 모든 가로 길이에 대해 바닥을 채우는 경우의 수 저장

# 다이나믹 프로그래밍(바텀업)
dp[1] = 1  # 가로 길이가 1일 때 바닥을 채우는 경우의 수: 2 x 1 타일 하나
dp[2] = 3  # 가로 길이가 2일 때 바닥을 채우는 경우의 수: 2 x 1 타일 두개, 1 x 2 타일 두개, 2 x 2 타일 한개
for i in range(3, n + 1):
    # 점화식
    #   (가로 길이 i - 1까지의 타일을 채우는 경우의 수) + (가로 길이 i - 2까지의 타일을 채우는 경우의 수 * 2)
    #       가로 길이 i - 1까지 타일이 채워진 경우 2 x 1 타일 하나로 채울 수 있음
    #       가로 길이 i - 2까지 타일이 채워진 경우 1 x 2 타일 두개 또는 2 x 2 타일 한개로 채우는 경우의 수가 2가 있으므로 2를 곱함
    #   선택 가능한 타일 중에서 최대 가로 길이가 2이므로 그 이하의 경우는 고려하지 않음
    dp[i] = (dp[i - 1] + dp[i - 2] * 2) % 796796

print(dp[n])
